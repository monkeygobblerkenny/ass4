{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","useState","id","description","amount","date","Date","toISOString","newCredit","setNewCredit","prevState","credits","console","log","map","credit","slice","creditsView","length","addCredit","placeholder","pleaceholder","step","Debits","newDebit","setNewDebit","debits","debit","toString","addDebit","App","logInInfo","newUser","currentUser","creditForm","creditList","push","newBalance","Math","round","parseFloat","debitForm","debitList","a","debitAPI","axios","get","data","creditAmount","debitAmount","i","balance","toFixed","response","status","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f487a96a.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\r\n        <br/>\r\n        <Link to=\"/debits\" >Debits (to be implemented in the Assignment)</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\nconst Credits = (props) => {\r\n\r\n\r\n  const [newCredit, setNewCredit] = useState({\r\n    id: 0,\r\n    description: \"\",\r\n    amount: 0,\r\n    date: (new Date).toISOString()\r\n  })\r\n\r\n\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    console.log(props)\r\n    console.log(credits)\r\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = credit.date.slice(0,10);\r\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\r\n    });\r\n  }\r\n\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setNewCredit((prevState) => ({\r\n      ...prevState,\r\n      id: props.credits.length + 1,\r\n      date: (new Date()).toISOString(),\r\n    }));\r\n    props.addCredit(newCredit);\r\n  }\r\n\r\n  let handleChange = (e) => {\r\n    setNewCredit((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <br/>\r\n      {creditsView()}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Description</label>\r\n            <input type=\"text\" placeholder=\"Description\" name = \"description\"\r\n            onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Amount</label>\r\n            <input type=\"number\" pleaceholder=\"Enter Amount\" name = \"amount\" step='.01'\r\n\r\n            onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button type='submit'>Add</button>\r\n        </form>  \r\n        <AccountBalance accountBalance={props.accountBalance}/>\r\n\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = (props) => {\r\n\r\n  const [newDebit, setNewDebit] = useState({\r\n    id: 0,\r\n    description: \"\",\r\n    amount: 0,\r\n    date: (new Date).toISOString()\r\n  })\r\n  \r\n\r\n  // Create the list of Debit items\r\n  \r\n  let debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = debit.date.toString().slice(0,10);\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\r\n    });\r\n  }\r\n\r\n  let handleChange = (e) => {\r\n    setNewDebit((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  }\r\n\r\n\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setNewDebit((prevState) => ({\r\n      ...prevState,\r\n      id: props.debits.length + 1,\r\n      date: (new Date()).toISOString(),\r\n    }));\r\n    props.addDebit(newDebit);\r\n  }\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n\r\n      {debitsView()}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"description\" onChange={handleChange}/>\r\n        <input type=\"number\" name=\"amount\" onChange={handleChange} step='.01'/>\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <AccountBalance accountBalance={props.accountBalance}/>\r\n      <br/>\r\n\r\n      <Link to=\"/\">Return to Home</Link>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\nimport AccountBalance from './components/AccountBalance';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 1234567.89,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  addCredit = (creditForm) => {\r\n    let newCredit = this.state.creditList;\r\n    newCredit.push(creditForm);\r\n    // this.setState({accountBalance: this.state.accountBalance + creditForm.amount, creditList: newCredit});\r\n    let newBalance = 0;\r\n    newBalance = Math.round((this.state.accountBalance + parseFloat(creditForm.amount))* 100) / 100;\r\n    console.log(this.state.accountBalance)\r\n    console.log(creditForm.amount)\r\n    this.setState({accountBalance: newBalance, creditList: newCredit});\r\n    }\r\n  addDebit = (debitForm) => {\r\n    let newDebit = this.state.debitList;\r\n    newDebit.push(debitForm);\r\n    let newBalance = 0;\r\n    newBalance = Math.round((this.state.accountBalance - debitForm.amount)* 100) / 100;\r\n    this.setState({accountBalance: newBalance, debitList: newDebit});\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let creditAPI = 'https://johnnylaicode.github.io/api/credits.json';  // Link to remote website API endpoint\r\n    let debitAPI = 'https://johnnylaicode.github.io/api/debits.json'\r\n\r\n    // Await for promise (completion) returned from API call\r\n    try {  // Accept success response as array of JSON objects (users)\r\n      let credit = await axios.get(creditAPI);\r\n      let debit = await axios.get(debitAPI);\r\n      //console.log(response);  // Print out response\r\n      // To get data object in the response, need to use \"response.data\"\r\n      console.log(credit.data)\r\n      console.log(debit.data)\r\n\r\n      credit = credit.data;\r\n      debit = debit.data;\r\n\r\n      let creditAmount = 0\r\n      let debitAmount = 0;\r\n      for(let i = 0; i < credit.length; i++){\r\n        creditAmount += credit[i].amount;\r\n      }\r\n      for(let i = 0; i < debit.length; i++){\r\n        debitAmount += debit[i].amount;\r\n      }\r\n      let balance = 0;\r\n      balance = Math.round((creditAmount - debitAmount) * 100) / 100;\r\n      balance = balance.toFixed(2);\r\n      this.setState({accountBalance: balance, creditList: credit, debitList: debit});  // Store received data in state's \"users\" object\r\n    } \r\n    catch (error) {  // Print out errors at console when there is an error response\r\n      if (error.response) {\r\n        // The request was made, and the server responded with error message and status code.\r\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\r\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\r\n      }    \r\n    }\r\n  }  \r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n\r\n\r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits addCredit={this.addCredit} credits={this.state.creditList} accountBalance={this.state.accountBalance}/>) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/ass4\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}